server {

    # Listen to port 80 (default)
    listen 80;

    # The domain name to respond to
    server_name www.makewebfast.net makewebfast.net;

    # Document root path and index files declaration
    root /var/www/html;
    index index.php index.html index.htm;

    # SSL configuration
    # listen 443 default ssl;

    # Include SSL certificates
    # ssl_certificate /var/www/ssl/makewebfast.crt;
    # ssl_certificate_key /var/www/ssl/makewebfast.key;

    # Force non-SSL URLs
    # if ($ssl_protocol = "") {
    #    rewrite ^/(.*) https://$server_name/$1 permanent;
    # }

    # Document root path (enhanced)
    location / {

        try_files $uri $uri/ /index.php?$args;

        # With HC plugin (without HTTPS / SSL support)
        # try_files /wp-content/cache/hyper-cache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?$args;

        # With W3TC plugin (with / without HTTPS / SSL support)
        # try_files /wp-content/cache/page_enhanced/${host}${cache_uri}_index.html $uri $uri/ /index.php?$args;

        # Webfonts CORS
        if ($request_filename ~* ^.*?\.(eot)|(ttf)|(woff)|(svg)|(otf)$) {
             add_header Access-Control-Allow-Origin *;
        }
        break;

    }

    # LB heartbeat
    # location = /heartbeat.txt { 
    # root /var/www/html;
    # access_log off;
    # }

    # Don't cache URIs containing params
    if ($query_string != "") {
        set $cache_uri 'null cache';
    }

    # Don't cache URIs containing the following segments
    if ($request_uri ~* "(/login/|/logout/|/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
        set $cache_uri 'null cache';
    }

    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
        set $cache_uri 'null cache';
    }

    # Execute PHP scripts
    location ~ \.php$ {

        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # FastCGI params
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # FastCGI buffers
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;

        # Other FastCGI params
        fastcgi_read_timeout 300;

    }

    # Set Expires Headers - max sets the Expires header to 31 December 2037
    location ~* \.(ico|css|js|gif|jpg|jpeg|png|bmp|pdf|doc|docx|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|swf|flv|tiff|ttf|woff|eot|ott|svg|txt|webp)$ {

          expires max;
          access_log off;
          log_not_found off;
          add_header Pragma public;
          add_header Cache-Control "public, must-revalidate, proxy-revalidate";

    }

    # Add trailing slash to */wp-admin requests
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    # Do not allow access to files giving away your WordPress version
    location ~ /(\.|wp-config.php|readme.html|licence.txt) {
        return 404;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store
    location ~ /\.(htaccess|htpasswd|bak|txt)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # GZIP support
    gzip on;
    gzip_types text/css text/x-component application/x-javascript application/javascript text/javascript text/x-js text/richtext image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;

    # Pagespeed Configuration
    # To enable / disable it set pagespeed directive to on / off - enable it only in production
    # To purge the Pgespeed cache run touch /var/ngx_pagespeed_cache/cache.flush
    pagespeed off;
    pagespeed FileCachePath /var/ngx_pagespeed_cache;

    # Ensure requests for pagespeed optimized resources go to the pagespeed handler and no extraneous headers get set
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
      add_header "" "";
    }
    location ~ "^/pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }

    # Rewrite Level
    pagespeed RewriteLevel PassThrough;
   
    # HTTPS Support
    # pagespeed MapOriginDomain "http://localhost" "https://makewebfast.net";

    # Minimize and optimize HTTP requests
    pagespeed EnableFilters rewrite_css;
    pagespeed EnableFilters rewrite_javascript;
    pagespeed EnableFilters combine_css;
    pagespeed EnableFilters combine_javascript;
    pagespeed EnableFilters inline_css;
    pagespeed CssInlineMaxBytes 4096;
    pagespeed EnableFilters inline_javascript;
    pagespeed JsInlineMaxBytes 4096;

    # Image Optimization and lazy load
    pagespeed EnableFilters rewrite_images;
    pagespeed EnableFilters inline_images;
    pagespeed EnableFilters resize_images;
    pagespeed EnableFilters recompress_images;
    pagespeed EnableFilters convert_jpeg_to_webp;
    # pagespeed ImageRecompressionQuality -1;
    pagespeed ImageRecompressionQuality 85;
    pagespeed EnableFilters inline_preview_images;
    pagespeed EnableFilters lazyload_images;

    # Remove comments and minify HTML
    pagespeed EnableFilters remove_comments;
    pagespeed EnableFilters collapse_whitespace;

    # CDN integration
    # pagespeed Domain *.cloudfront.net;

    # CDN integration (rewrite alternative)
    # pagespeed EnableFilters rewrite_domains;
    # pagespeed MapRewriteDomain https://xyzxyzxyz.cloudfront.net https://makewebfast.net;

}
