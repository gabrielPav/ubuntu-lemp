# The user to run Nginx as, often www, nginx or nobody
user makewebfast;

# Number of cores / threads on the machine
# cat /proc/cpuinfo | grep ^processor | wc -l
worker_processes 1;

# Maximum number of open files for worker processes
# Should be higher than worker_connections
# This is set in the OS with 'ulimit -n 100000'
worker_rlimit_nofile 100000;

# Pid file location, the default value will often be just fine
pid /var/run/nginx.pid;

events {

    # Maximum number of concurrent connections that can be opened by a worker process. 1024 is a decent starting point
    # (Max clients = worker_connections * worker_processes)
    # Max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 4096;

    # Accept as many connections as possible after getting a notification about a new connection 
    multi_accept on;

    # The polling method we should use for multiplexing clients on to threads
    # If Linux 2.6+ use epoll
    use epoll;

}

http {

    # Logs, make sure the destination folders exists - turn off access log to reduce disk IO
    access_log off;

    # Log only critical errors
    error_log /usr/local/nginx/logs/error.log crit;

    # Don't advertise every detail of the server to all requests (security measure)
    server_tokens off;

    # Enables or disables the use of sendfile()
    sendfile on;

    # Send all header files in one packet as opposed to one by one
    tcp_nopush on;
    tcp_nodelay on;

    # How long to wait for new request from the same connection
    # We'll set it low to keep our workers from being busy for too long
    keepalive_timeout 5;

    # Use when Varnish in front as reverse-proxy to determine the real client IP
    # set_real_ip_from 127.0.0.1;
    # real_ip_header X-Forwarded-For;

    # Close connection on non responding client
    # This will free up all memory associated with that client
    reset_timedout_connection on;

    # Timeouts
    client_header_timeout 15;
    client_body_timeout 15;
    send_timeout 15;

    # Sets the maximum allowed size of the client request body specified in the Content-Length request header field
    client_max_body_size 150M;

    # File type detection and default
    include mime.types;
    default_type application/octet-stream;

    # Enable Gzip compression
    gzip on;

    # But disable it for clients that don't support it
    gzip_disable "MSIE [1-6].(?!.*SV1)";

    # Set GZIP version HTTP/1.0 and HTTP/1.1 (HTTP/1.0 is required for CloudFront)
    # Nginx default version: HTTP 1.1
    # gzip_http_version 1.0;

    # Tell proxies to cache both the gzipped and regular version of a resource whenever the client's Accept-Encoding capabilities header varies
    # Avoids the issue where a non-gzip capable client would display gibberish if their proxy gave them the gzipped version
    gzip_vary on;

    # Avoid compressing the same file each time it is requested
    gzip_static on;

    # Compress level (1 to 9)
    gzip_comp_level 5;

    # Don't compress anything that's already small and unlikely to shrink much
    # If at all (the default is 20 bytes, which is bad as that usually leads to larger files after gzipping)
    gzip_min_length 256;

    # Compress regardless of caching headers / gzip all requests
    gzip_proxied any;

    # File types to Gzip compress, it works best for plain text files
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;

    # This will set the buffer size to 16 * 8k, or 128KB
    gzip_buffers 16 8k;

    # Cache informations about file descriptors, frequently accessed files
    # Can boost performance, but you need to test those values
    open_file_cache max=100000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;

    # If you are using Nginx as load-balancer, set this to off
    open_file_cache_errors on;

    # Virtual Host Configs - include all additional configuration files
    include /usr/local/nginx/conf/makewebfast.net.conf;

}
